version: '3.8'

services:
  db:
    image: postgres:14.5
    volumes:
      - db_value:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - PGDATA=/var/lib/postgresql/data/
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DATABASES=${POSTGRES_DATABASE_NAME}


  redis:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'

  web:
    image: web
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    command:
      bash -c "python manage.py migrate &&
      python manage.py collectstatic --no-input &&
      python manage.py createsuperuser --no-input &&
      gunicorn core.wsgi -b 0.0.0.0:8000"
    restart: unless-stopped
    volumes:
      - static_value:/app/backend_static/
      - media_value:/app/backend_media/
    depends_on:
      - db
      - redis
    env_file:
      - ./.env

  nginx:
    image: nginx:1.21.3-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/backend_static/
      - media_value:/var/html/backend_media/
    depends_on:
      - web

  celery:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    command: celery -A core worker --loglevel=INFO
    volumes:
      - /app
    depends_on:
      - redis

  celery-beat:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    command: celery -A core beat --loglevel=INFO
    volumes:
        - /app
    depends_on:
        - redis

volumes:
  static_value:
  media_value:
  db_value:
